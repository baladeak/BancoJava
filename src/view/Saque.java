/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import business.Banco;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Objects;
import javax.swing.JOptionPane;

/**
 *
 * @author MatheusSabino
 */
public class Saque extends javax.swing.JFrame {

    ArrayList<Banco> banco;
    Iterator<Banco> it;

    /**
     * Creates new form Saque
     *
     * @param banco
     */
    public Saque(ArrayList<Banco> banco) {
        initComponents();
        this.banco = banco;
        it = banco.iterator();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtConta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        btnSacar = new javax.swing.JButton();
        btnDepositar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Saque e Deposito de dinheiro");

        jLabel2.setText("Conta:");

        txtConta.setToolTipText("");

        jLabel3.setText("Valor:");

        txtValor.setToolTipText("");
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorKeyTyped(evt);
            }
        });

        btnSacar.setText("Sacar");
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });

        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtConta, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtValor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnSacar)
                            .addGap(18, 18, 18)
                            .addComponent(btnDepositar))))
                .addGap(114, 118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacar)
                    .addComponent(btnDepositar))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacarActionPerformed
        // TODO add your handling code here:
        Integer ponteiro = 99999;
        try {
            Integer numConta = Integer.valueOf(txtConta.getText());
            Double saque = Double.valueOf(txtValor.getText());
            boolean saldoInsuficiente = false;
            boolean contaInvalida = false;

            for (int i = 0; i < banco.size(); i++) {
                if (Objects.equals(numConta, banco.get(i).contas.getNumero())) {
                    ponteiro = i;
                    if (saque <= banco.get(i).contas.getSaldo() && saque > 0) {

                        Double saldo = banco.get(i).contas.getSaldo();
                        banco.get(i).contas.setSaldo(saldo - saque);
                        JOptionPane.showMessageDialog(null, "Saque efetuado com sucesso\n"
                                + "Novo saldo: " + (saldo - saque));
                        saldoInsuficiente = false;
                        contaInvalida = false;
                        break;
                    } else {
                        saldoInsuficiente = true;

                    }
                } else {
                    contaInvalida = true;
                }

            }
            if (saldoInsuficiente) {
                JOptionPane.showMessageDialog(null, "Saldo insuficiente ou valor inválido");
            } else if (contaInvalida) {
                JOptionPane.showMessageDialog(null, "Conta inválida");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Valores inválidos");
        }
        if (ponteiro != 99999) {
            System.out.println("");
            System.out.println("num conta: " + banco.get(ponteiro).contas.getNumero());
            System.out.println("saldo " + banco.get(ponteiro).contas.getSaldo());
        }

    }//GEN-LAST:event_btnSacarActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
        // TODO add your handling code here:
        Integer numConta = Integer.valueOf(txtConta.getText());
        Double deposito = Double.valueOf(txtValor.getText());
        boolean depositado = false;

        for (int i = 0; i < banco.size(); i++) {
            if (Objects.equals(numConta, banco.get(i).contas.getNumero())) {
                if (deposito > 0) {
                    Double saldo = banco.get(i).contas.getSaldo();
                    banco.get(i).contas.setSaldo((saldo + deposito));
                    depositado = true;
                    JOptionPane.showMessageDialog(null, "Deposito realizado com sucesso\n"
                            + "Saldo novo: " + (saldo + deposito));
                    break;
                } else {
                    JOptionPane.showMessageDialog(null, "Digite um valor válido");
                    break;
                }

            } else {
                depositado = false;
            }
        }
        if (!depositado) {
            JOptionPane.showMessageDialog(null, "Conta inválida");
        }


    }//GEN-LAST:event_btnDepositarActionPerformed

    private void txtValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyTyped
        // TODO add your handling code here:

        if (evt.getKeyChar() == ',') {
            evt.consume();
            txtValor.setText(txtValor.getText() + ".");
        }
    }//GEN-LAST:event_txtValorKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Saque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Saque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Saque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Saque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new Saque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnSacar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtConta;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
